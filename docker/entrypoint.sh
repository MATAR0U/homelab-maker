#!/usr/bin/env bash
set -euo pipefail

# Check docker socket
if [[ ! -S /var/run/docker.sock ]]; then
    echo "[ERR] Le socket Docker n’est pas monté ! Abort."
    exit 1
fi

# Verif JWT secret key
if [[ -v JWT_SECRET_KEY ]]; then
    # Variable config by user
    echo "[INFO] JWT secret generated by user."
else
    # Variable unexist
    JWT_SECRET_KEY=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 20; echo)
fi

# Verif JWT expired timer
if [[ -v JWT_EXPIRE_MINUTES ]]; then
    # Variable config by user
    echo "[INFO] JWT expired time generated by user."
else
    # Variable unexist
    JWT_EXPIRE_MINUTES="60"
fi

CONFIG_DIR="/config"
CONFIG_FILE="${CONFIG_DIR}/config.xml"


mkdir -p "${CONFIG_DIR}"


if [[ -f "${CONFIG_FILE}" ]]; then
    echo "[INFO] Le fichier de configuration existe déjà."
else
    echo "[INFO] Création du fichier de configuration…"
    if ! cat >"${CONFIG_FILE}" <<EOF; then
<?xml version="1.0" encoding="UTF-8"?>
<settings>
    <auth>
        <username>admin</username>
        <pwd_hash>blank</pwd_hash>
    </auth>

    <jwt>
        <secret_key>${JWT_SECRET_KEY}</secret_key>
        <algorithm>HS256</algorithm>
        <expire_minutes>${JWT_EXPIRE_MINUTES}</expire_minutes>
    </jwt>
</settings>
EOF
        echo "[ERR] Échec de l’écriture du fichier ${CONFIG_FILE}" >&2
        exit 1
    fi
    echo "[INFO] Fichier créé à ${CONFIG_FILE}"
fi


exec "$@"